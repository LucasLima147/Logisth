/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janelas;

import bd.beans.Categoria;
import bd.beans.Fornecedor;
import bd.beans.Produto;
import bd.dao.CategoriaDAO;
import bd.dao.FornecedorDAO;
import bd.dao.ProdutoDAO;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import main.LoginUsuario;

/**
 * Autores: Lucas Lima e Hermane Boavida
 * <p> Data: 21/05/2020 </p>
 * <p> Tela de cadastrar, editar e deletar Cadastro de produtos </p>
 */
public class frmRegistroProduto extends javax.swing.JFrame {

    /**
     * Construtor da tela
     */
    public frmRegistroProduto() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.soAlterarDados = false;
        dtmTabela = (DefaultTableModel) tblProdutos.getModel();
        tblProdutos.setRowSorter(new TableRowSorter(dtmTabela));
        fornecedor = new FornecedorDAO();
        produto = new ProdutoDAO();
        categoria = new CategoriaDAO();
        this.preencherComboBoxFornecedor();
        this.preencherComboBoxCategoria();
        this.gravaValoresNaTabela("");
        txtDescricaoProduto.setLineWrap(true);
        this.controleDeAcesso();
    }
    
    // Para usar a tabela
    DefaultTableModel dtmTabela;
    // instanciando o DAO do produto
    FornecedorDAO fornecedor;
    CategoriaDAO categoria;
    ProdutoDAO produto;
    
    // Saber se vou alterar ou não
    private boolean soAlterarDados; 
    public boolean isSoAlterarDados() {
        return soAlterarDados;
    }
    public void setSoAlterarDados(boolean soAlterarDados) {
        this.soAlterarDados = soAlterarDados;
    }
    
    
    /**
     * Autores: Lucas Lima e Hermane Boavida
     * <p> Data: 11/08/2020</p>
     * <p> Método responsáve por fazer o preenchimento dos fornecedires cadastrados no Banco de Dados</p>
     */
    private void preencherComboBoxFornecedor(){
        // recebendo a lista de fornecedores registrados
        for(Fornecedor f: fornecedor.select_PesquisaFornecedor("")){
            cbbFornecedor.addItem(f);
        }
    }
    /**
     * Autores: Lucas Lima e Hermane Boavida
     * <p> Data: 11/08/2020</p>
     * <p> Método responsáve por fazer o preenchimento das categorias cadastrados no Banco de Dados</p>
     */
    private void preencherComboBoxCategoria(){
        for(Categoria c: categoria.select_PesquisaCategoria("")){
            cbbCategoria.addItem(c);
        }
    }
    
    /**
     * Autores: Lucas Lima e Hermane Boavida
     * <p> Data: 11/08/2020</p>
     * <p> Este método realiza o preenchimento da tabela de produtos</p>
     */
    private String query;
    private void gravaValoresNaTabela(String query){
        DefaultTableModel modelo = (DefaultTableModel) tblProdutos.getModel(); 
        
        // zerando o número de linhas
        modelo.setNumRows(0);
        
        // inserindo os valores na tabela
        for(Produto p: produto.select_PesquisaProduto(query)){
            // pegando os valores do Banco de Dados
            modelo.addRow(new Object[]{
                p.getCodProduto(),
                p.getNome(),
                p.getDescricao(),
                categoria.nomeCategoria(categoria, p.getCategoria()),
                p.getQtdEstoque(),
                p.getPreco(),
                p.getQtdMinima(),
                fornecedor.nomeFornecedor(fornecedor, p.getFornecedor())
            });
        }
    }
    /**
     * Autores: Lucas Lima e Hermane Boavida
     * <p> Data: 19/10/2020</p>
     * <p> Método responsáve por verificar quais funções o usuário vai poder acessar através do seu cargo.</p>
     */
    private void controleDeAcesso(){
        if(LoginUsuario.getCargo().equals("Funcionario")){
            btnCadastrar.setEnabled(false);
        }else{
            btnCadastrar.setEnabled(true);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        cbbCategoria = new javax.swing.JComboBox<>();
        cbbFornecedor = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCodProduto = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JToggleButton();
        btnApagar = new javax.swing.JToggleButton();
        btnCadastrar = new javax.swing.JToggleButton();
        btnAlterar = new javax.swing.JToggleButton();
        txtPreco = new javax.swing.JFormattedTextField();
        txtQuantidade = new javax.swing.JFormattedTextField();
        txtEstoqueMin = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescricaoProduto = new javax.swing.JTextArea();
        btnCancelar = new javax.swing.JToggleButton();
        btnFinalizar = new javax.swing.JToggleButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Produto", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 18))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Nome do Produto");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Descrição do Produto");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Quantidade");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Preço (R$)");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Categoria:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Fornecedor");

        txtNomeProduto.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtNomeProduto.setEnabled(false);

        cbbCategoria.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbCategoria.setEnabled(false);

        cbbFornecedor.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbFornecedor.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Estoque Mínimo");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Código do Produto");

        txtCodProduto.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtCodProduto.setEnabled(false);

        btnPesquisar.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/btnPesquisar.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setToolTipText("Pesquisar funcionário");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnApagar.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/btnaApagarProduto.png"))); // NOI18N
        btnApagar.setText("Apagar");
        btnApagar.setToolTipText("Apagar funcionário");
        btnApagar.setEnabled(false);
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        btnCadastrar.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/btnCAdastroProduto.png"))); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setToolTipText("Adicionar novo funcionário");
        btnCadastrar.setBorderPainted(false);
        btnCadastrar.setEnabled(false);
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icoCadastroUsuarios.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setToolTipText("Alterar dados");
        btnAlterar.setEnabled(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        txtPreco.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtPreco.setEnabled(false);
        txtPreco.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtQuantidade.setEnabled(false);
        txtQuantidade.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtEstoqueMin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtEstoqueMin.setEnabled(false);
        txtEstoqueMin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtEstoqueMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstoqueMinActionPerformed(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtDescricaoProduto.setColumns(1);
        txtDescricaoProduto.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDescricaoProduto.setTabSize(0);
        txtDescricaoProduto.setEnabled(false);
        jScrollPane2.setViewportView(txtDescricaoProduto);

        btnCancelar.setBackground(new java.awt.Color(217, 212, 255));
        btnCancelar.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/btnCancelarrCadastroUsuario.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnFinalizar.setBackground(new java.awt.Color(217, 212, 255));
        btnFinalizar.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/btnFinalizarCadastroUsuario.png"))); // NOI18N
        btnFinalizar.setText("Finalizar");
        btnFinalizar.setToolTipText("");
        btnFinalizar.setEnabled(false);
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        tblProdutos.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Produto", "Nome", "Descricao", "Categoria", "Quantidade", "Preço", "Estoque Min", "Fornecedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProdutos.getTableHeader().setReorderingAllowed(false);
        tblProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdutosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblProdutos);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 255));
        jLabel7.setText("Editar categorias");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(101, 101, 101))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                                .addComponent(txtPreco))
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cbbFornecedor, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbbCategoria, 0, 185, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(txtEstoqueMin, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtCodProduto)
                                        .addContainerGap())))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEstoqueMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        /**
         * Autores: Lucas Lima e Hermane Boavida
         * <p> Data: 21/05/2020<br>
         *  Finalidade: abrir uma tela com opções de pesquisa de produtos</p>
         */
    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        jDialogPesquisaProduto pesquisaProduto = new jDialogPesquisaProduto(this, true);
        
        pesquisaProduto.setVisible(true);
        if(pesquisaProduto.isPesquisaNome()){
            query = "WHERE nome LIKE '%"+pesquisaProduto.getTxtNome()+"%'";
            gravaValoresNaTabela(query);
            btnCancelar.setEnabled(true);
        }else if(pesquisaProduto.isPesquisaFornecedor()){
            Fornecedor f = pesquisaProduto.getCbbFornecedor();
            query = "WHERE codFornecedor LIKE '%"+Integer.toString(f.getCodFornecedor())+"%'";
            gravaValoresNaTabela(query);
            btnCancelar.setEnabled(true);
        }else if(pesquisaProduto.isPesquisaCategoria()){
            Categoria c = pesquisaProduto.getCbbCategoria();
            query = "WHERE codFornecedor LIKE '%"+Integer.toString(c.getCodCatoria())+"%'";
            gravaValoresNaTabela(query);
            btnCancelar.setEnabled(true);
        }
        
    }//GEN-LAST:event_btnPesquisarActionPerformed
        /**
         * Autores: Lucas Lima e Hermane Boavida
         * <p> Data: 21/05/2020<br>
         *  Finalidade: apagar o registro da tabala<br>
         *  OBS: será exigido o login do usuário para apagar registro de produto</p>
         */
    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        jDialogAlteraDados alterar = new jDialogAlteraDados(this, true);
        
        alterar.setVisible(true);
        if(alterar.isPermissao()){
            if(tblProdutos.getSelectedRow() != -1){
                produto.setCodProduto(Integer.parseInt(txtCodProduto.getText()));
                produto.Delete_Produto();
                gravaValoresNaTabela("");
            }else{
                JOptionPane.showMessageDialog(null,"linha não encontrada");
            }
                
        }
    }//GEN-LAST:event_btnApagarActionPerformed
        /**
         * 
         * Autores: Lucas Lima e Hermane
         * <p> Data: 21/05/2020 <br>
         * Finalidade: habilitar e limpar campos para edição</p>
         */
    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // habilitando edição de campos
        txtNomeProduto.setEnabled(true);
        txtDescricaoProduto.setEnabled(true);
        cbbCategoria.setEnabled(true);
        txtQuantidade.setEnabled(true);
        txtPreco.setEnabled(true);
        txtEstoqueMin.setEnabled(true);
        cbbFornecedor.setEnabled(true);
        
        // habilitando botão cancelar e finalizar
        btnCancelar.setEnabled(true);
        btnFinalizar.setEnabled(true);
        // desabiliando o botão cadastrar e pesquisar
        btnCadastrar.setEnabled(false);
        btnPesquisar.setEnabled(false);
        // sinalizando a Flag de alteração de dados
        this.soAlterarDados = false;
    }//GEN-LAST:event_btnCadastrarActionPerformed
        /**
         * 
         * Autores: Lucas Lima e Hermane Boavida
         * <p> Data: 21/05/2020<br>
         *  Finalidade: alterar e atualizar os dados selecionados da tabela<br>
         *  OBS: será exigido o login do usuário para habilitar a alteração nos dados</p>
         */
    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // instância
        jDialogAlteraDados alterar = new jDialogAlteraDados(this, true);
        
        alterar.setVisible(true);
        if(alterar.isPermissao()){
            // sinalizando a alteração de dados para o botão finalizar
            this.setSoAlterarDados(true);
            
            // habilitando edição de campos
            txtNomeProduto.setEnabled(true);
            txtDescricaoProduto.setEnabled(true);
            cbbCategoria.setEnabled(true);
            txtPreco.setEnabled(true);
            txtEstoqueMin.setEnabled(true);
            cbbFornecedor.setEnabled(true);
            
            //desabilitando o botão Alterar e apagar
            btnAlterar.setEnabled(false);
            btnApagar.setEnabled(false);
            // habilitando o botão Finalizar
            btnFinalizar.setEnabled(true);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed
        /**
         * 
         * Autor: Lucas Lima e Hermane Boavida
         * <p> Data: 21/05/2020 <br>
         * Botão: Cancelar<br> 
         * Finalidade: Cancelar o cadastro ou a alteração de produtos</p>
         */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // BOTÃO CANCELAR
        // desabilitando escrita nos campos
        txtNomeProduto.setEnabled(false);
        cbbCategoria.setEnabled(false);
        cbbFornecedor.setEnabled(false);
        txtDescricaoProduto.setEnabled(false);
        txtQuantidade.setEnabled(false);
        txtPreco.setEnabled(false);
        txtEstoqueMin.setEnabled(false);
        txtCodProduto.setEnabled(false);

        // limpando os campos
        txtNomeProduto.setText("");
        cbbCategoria.setSelectedIndex(0);
        cbbFornecedor.setSelectedIndex(0);
        txtDescricaoProduto.setText("");
        txtQuantidade.setText("");
        txtPreco.setText("");
        txtEstoqueMin.setText("");
        txtCodProduto.setText("");

        // desabilitando botões
        btnFinalizar.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnApagar.setEnabled(false);
        // habilitando o botão Cadastrar e Pesquisar
        this.controleDeAcesso();
        btnPesquisar.setEnabled(true);
        this.gravaValoresNaTabela("");
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        Fornecedor f = (Fornecedor) cbbFornecedor.getSelectedItem();
        Categoria c = (Categoria) cbbCategoria.getSelectedItem();
        
        // BOTÃO FINALIZAR
        // Verificar se apenas vou alterar dados
        if(!this.isSoAlterarDados()){
            // COMANDO DE CADASTRO DE PRODUTOS
            produto.setNome(txtNomeProduto.getText());
            produto.setDescricao(txtDescricaoProduto.getText());
            produto.setCategoria(c.getCodCatoria());
            produto.setQtdEstoque(Integer.parseInt(txtQuantidade.getText()));
            produto.setPreco(txtPreco.getText());
            produto.setQtdMinima(Integer.parseInt(txtEstoqueMin.getText()));
            produto.setFornecedor(f.getCodFornecedor());
            produto.insert();
            // atualizando a tabela 
            this.gravaValoresNaTabela("");
        }else{
            // COMANDO DE ATUALIZAÇÃO DE DADOS DO PRODUTOS
            produto.setNome(txtNomeProduto.getText());
            produto.setDescricao(txtDescricaoProduto.getText());
            produto.setCategoria(c.getCodCatoria());
            produto.setQtdEstoque(Integer.parseInt(txtQuantidade.getText()));
            produto.setPreco(txtPreco.getText());
            produto.setQtdMinima(Integer.parseInt(txtEstoqueMin.getText()));
            produto.setFornecedor(f.getCodFornecedor());
            produto.setCodProduto(Integer.parseInt(txtCodProduto.getText()));
            produto.update_DadosProduto();
            this.gravaValoresNaTabela("");
        }

        // desabilitando escrita nos campos
        txtNomeProduto.setEnabled(false);
        cbbCategoria.setEnabled(false);
        cbbFornecedor.setEnabled(false);
        txtDescricaoProduto.setEnabled(false);
        txtQuantidade.setEnabled(false);
        txtPreco.setEnabled(false);
        txtEstoqueMin.setEnabled(false);
        txtCodProduto.setEnabled(false);

        // limpando campo para escrita
        txtNomeProduto.setText("");
        cbbCategoria.setSelectedIndex(0);
        cbbFornecedor.setSelectedIndex(0);
        txtDescricaoProduto.setText("");
        txtQuantidade.setText("");
        txtPreco.setText("");
        txtEstoqueMin.setText("");
        txtCodProduto.setText("");

        // fesabilitando botões
        btnFinalizar.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnApagar.setEnabled(false);
        // habilitando o botão Cadastrar e Pesquisar
        btnCadastrar.setEnabled(true);
        btnPesquisar.setEnabled(true);
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void tblProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdutosMouseClicked
        // buscando o valor da tabela no combo box
        // Categoria
        int cont = cbbCategoria.getItemCount()-1;
        String categoria = tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 3).toString();
        String fornecedor = tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 7).toString();
        if(tblProdutos.getSelectedRow() != -1){
            while (cont >= 0){
                if(categoria.equals(cbbCategoria.getItemAt(cont).toString())){
                    cbbCategoria.setSelectedIndex(cont);
                    cont = -1;
                }
                cont --;
            }
            // Forbecedor
            cont = cbbFornecedor.getItemCount()-1;
            while (cont >= 0){
                if(fornecedor.equals(cbbFornecedor.getItemAt(cont).toString())){
                    cbbFornecedor.setSelectedIndex(cont);
                    cont = -1;
                }
                cont --;
            }

            // transferindo os dados da linha selecionada para os campos
            txtCodProduto.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 0).toString());
            txtNomeProduto.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 1).toString());
            txtDescricaoProduto.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 2).toString());
            txtQuantidade.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 4).toString());
            txtPreco.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 5).toString());
            txtEstoqueMin.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 6).toString());
            
            // desabilitando escrita nos campos
            txtNomeProduto.setEnabled(false);
            cbbCategoria.setEnabled(false);
            cbbFornecedor.setEnabled(false);
            txtDescricaoProduto.setEnabled(false);
            txtQuantidade.setEnabled(false);
            txtPreco.setEnabled(false);
            txtEstoqueMin.setEnabled(false);
            txtCodProduto.setEnabled(false);
        }
        
        // controlando o acesso as funções a partir do cargo do funcionário
        if(!LoginUsuario.getCargo().equals("Funcionario")){
            //habilitando botões
            btnAlterar.setEnabled(true);
            btnApagar.setEnabled(true);
            btnCancelar.setEnabled(true);

            //desabilitando botões
            btnCadastrar.setEnabled(false);
            btnPesquisar.setEnabled(false);
            btnFinalizar.setEnabled(false);
        }else{
            btnCancelar.setEnabled(true);
        }
    }//GEN-LAST:event_tblProdutosMouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        jDialogCategorias categorias = new jDialogCategorias(this, true);
        categorias.setVisible(true);
        cbbCategoria.removeAllItems();
        preencherComboBoxCategoria();
        gravaValoresNaTabela("");
    }//GEN-LAST:event_jLabel7MouseClicked

    private void txtEstoqueMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstoqueMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstoqueMinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmRegistroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmRegistroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmRegistroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmRegistroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmRegistroProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAlterar;
    private javax.swing.JToggleButton btnApagar;
    private javax.swing.JToggleButton btnCadastrar;
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JToggleButton btnFinalizar;
    private javax.swing.JToggleButton btnPesquisar;
    private javax.swing.JComboBox<Object> cbbCategoria;
    private javax.swing.JComboBox<Object> cbbFornecedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTextField txtCodProduto;
    private javax.swing.JTextArea txtDescricaoProduto;
    private javax.swing.JFormattedTextField txtEstoqueMin;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JFormattedTextField txtPreco;
    private javax.swing.JFormattedTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
